# This is a basic spec for the DCS world EDM files
# Special types:
#   uint_string   means a uint-prefixed string
#   zstring       would mean a null-terminated string
#   uchar         Single byte as an integer
#   byte          Single byte as a bytes object (or array of such)
# Literal string prefixes:
#   b"data"       raw byte data - no prefix/suffix
#   uip"ssds"     UINT-prefixed string
#   z"stringdat"  Null-terminated string

FILE := 
  HEADER header
  model::RootNode firstNode

INDEX_ENTRY :=
  uint_string name
  uint   index

INDEX := 
  uint length
  INDEX_ENTRY entries[length]

HEADER :=
  b"EDM"
  ushort version
  INDEX indexA
  INDEX indexB

NODELIST := 
  uint length
  NODE nodes[length]

PROPLIST :=
  uint length
  PROPNODE props[length]

VERTEXDEFSLIST :=
  uint length
  VERTEXDEFS defs[length]

VERTEXDEFS :=
  uint length
  VERTEXDEF defs[length]

VERTEXDEF := DEFBLENDING | DEFCULLING | DEFDEPTHBIAS | DEFVERTEXFORMAT | DEFTEXCOORDCHANNELS | DEFMATERIALNAME | DEFNAME | DEFUNIFORMS | DEFANIMATEDUNIFORMS | DEFSHADOWS | DEFTEXTURES

NODE := model::RootNode | model::Node | model::TransformNode | model::ArgRotationNode | model::ArgPositionNode | PROPNODE

PROPNODE := PROPFLOATNODE | PROPUINTNODE | PROPVEC2NODE | PROPVEC3NODE | PROPANIMATEDFLOAT

model::RootNode :=
  uip"model::RootNode"
  uint_string description
  uint version
  PROPLIST properties
  byte unknown[145]
  VERTEXDEFSLIST vdefsList
  byte unknown2[8]
  NODELIST nodes

model::ArgRotationNode := 
  uip"model::ArgRotationNode"
  uint_string name
  byte unknown[65*4]
  uint part2_count
  byte unknown2[(part2_count*10 + 1)*4]

model::ArgPositionNode :=
  uip"model::ArgPositionNode"
  uint_string name
  byte unknown[256]
  uint count
  byte unknown2[32*count+8]

model::Node :=
  uip"model::Node"
  byte unknown[12]

model::TransformNode :=
  uip"model::TransformNode"
  byte unknown[140]

PROPUINTNODE := 
  uip"model::Property<unsigned int>"
  uint_string name
  uint value

PROPFLOATNODE := 
  uip"model::Property<float>"
  uint_string name
  float value


PROPVEC2NODE :=
  uip"model::Property<osg::Vec2f>"
  uint_string name
  float vector[2]

PROPVEC3NODE :=
  uip"model::Property<osg::Vec3f>"
  uint_string name
  float vector[3]

PROPANIMATEDFLOAT :=
  uip"model::AnimatedProperty<float>"
  uint_string name
  float data[8]

DEFBLENDING :=
  uip"BLENDING"
  uchar mode

DEFCULLING := 
  uip"CULLING" key
  uchar mode

DEFDEPTHBIAS :=
  uip"DEPTH_BIAS"
  uint mode

DEFVERTEXFORMAT :=
  uip"VERTEX_FORMAT"
  byte format[30]

DEFTEXCOORDCHANNELS :=
  uip"TEXTURE_COORDINATES_CHANNELS"
  byte channels[52]

DEFMATERIALNAME :=
  uip"MATERIAL_NAME"
  uint_string name

DEFNAME :=
  uip"NAME" key
  uint_string name

DEFUNIFORMS :=
  uip"UNIFORMS"
  NODELIST uniformNames

DEFANIMATEDUNIFORMS :=
  uip"ANIMATED_UNIFORMS"
  NODELIST animatedUniforms

DEFSHADOWS :=
  uip"SHADOWS"
  uchar mode

DEFTEXTURES :=
  uip"TEXTURES"
  uint length
  DEFTEXTURE textures[length]

DEFTEXTURE :=
  b"\x00\x00\x00\x00\xff\xff\xff\xff"
  uint_string name
  b"\x02\x00\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\x06\x00\x00\x00"
  MATRIX matrix

MATRIX :=
  float data[16]

